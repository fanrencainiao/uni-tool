{"version":3,"sources":["webpack:///C:/Users/Administrator/Documents/HBuilderProjects/tmUI-vuetify示例/tm-vuetify/components/tm-tree/tm-tree.vue?8e63","webpack:///C:/Users/Administrator/Documents/HBuilderProjects/tmUI-vuetify示例/tm-vuetify/components/tm-tree/tm-tree.vue?5c8a","webpack:///C:/Users/Administrator/Documents/HBuilderProjects/tmUI-vuetify示例/tm-vuetify/components/tm-tree/tm-tree.vue?cb73","webpack:///C:/Users/Administrator/Documents/HBuilderProjects/tmUI-vuetify示例/tm-vuetify/components/tm-tree/tm-tree.vue?3e8e","uni-app:///tm-vuetify/components/tm-tree/tm-tree.vue"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAoH;AACpH;AAC2D;AACL;;;AAGtD;AACqK;AACrK,gBAAgB,+KAAU;AAC1B,EAAE,6EAAM;AACR,EAAE,kFAAM;AACR,EAAE,2FAAe;AACjB;AACA;AACA;AACA;AACA;AACA,EAAE,sFAAU;AACZ;AACA;;AAEA;AACe,gF;;;;;;;;;;;;ACtBf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA,aAAa,2OAEN;AACP,KAAK;AACL;AACA,aAAa,yNAEN;AACP,KAAK;AACL;AACA,aAAa,8HAEN;AACP;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;AC3CA;AAAA;AAAA;AAAA;AAAimB,CAAgB,2nBAAG,EAAC,C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC6DrnB;AACA,iBADA;;AAGA;AACA,0BADA;AAEA,kBAFA;AAGA,oBAHA,EAHA;;AAQA;AACA;AACA,iBADA;AAEA;AACA;AACA,OAJA,EADA;;AAOA;AACA,iBADA;AAEA,+CAFA,EAPA;;AAWA;AACA,kBADA;AAEA,iCAFA,EAXA;;AAeA;AACA,kBADA;AAEA,+BAFA,EAfA;;AAmBA;AACA,kBADA;AAEA,wBAFA,EAnBA;;AAuBA;AACA;AACA,kBADA;AAEA,iDAFA,EAxBA;;AA4BA;AACA;AACA,4BADA;AAEA,mBAFA,EA7BA;;AAiCA;AACA;AACA,4BADA;AAEA,mBAFA,EAlCA;;AAsCA;AACA,4BADA;AAEA,oBAFA,EAtCA,EARA;;;AAmDA;AACA;AACA,gBADA;AAEA,aAFA,qBAEA;AACA;AACA,OAJA,EADA,EAnDA;;;AA2DA;AACA;AACA;AACA;AACA,KAJA;AAKA;AACA;AACA,gBADA,EACA;AACA;AACA;AACA;AACA,KAXA;AAYA;AACA;AACA,KAdA;AAeA;AACA,SADA,iBACA;AACA;AACA,OAHA;AAIA,SAJA,eAIA,GAJA,EAIA;AACA;AACA;AACA;AACA,OARA,EAfA,EA3DA;;;AAqFA,MArFA,kBAqFA;AACA;AACA,uBADA;AAEA,kBAFA;;AAIA,GA1FA;AA2FA,SA3FA,qBA2FA;AACA;AACA;AACA,GA9FA;AA+FA;AACA,mBADA,2BACA,IADA,EACA;AACA;AACA;AACA;;AAEA;AACA,OAJA;AAKA,KARA;AASA;AACA,sBAVA,8BAUA,IAVA,EAUA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,wBADA;;AAGA;;;AAGA;AACA,oCAVA,CAUA;AACA,wCAXA,CAWA;AACA;AACA;AACA,aAFA;AAGA;AACA;AACA,aAFA;AAGA;AACA,gBADA,GACA,KADA;AAEA;AACA,+CADA,GACA,IADA,GACA,KADA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAlDA;AAmDA,OArDA;AAsDA,KAlEA;AAmEA;AACA,iBApEA,yBAoEA,IApEA,EAoEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,sBADA;;AAGA;AACA;AACA,kCATA,CASA;AACA,sCAVA,CAUA;AACA;AACA;AACA,WAFA;AAGA;AACA;AACA,WAFA;AAGA;AACA;AACA,WADA,GACA,IADA,GACA,KADA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAlCA,MAkCA;AACA;AACA;AACA;AACA;AACA,OA3CA;AA4CA,KAlHA;;AAoHA;AACA;;;;;;AAMA,oBA3HA,4BA2HA,IA3HA,EA2HA,IA3HA,EA2HA,GA3HA,EA2HA,KA3HA,EA2HA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SALA,MAKA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAJA,MAIA;AACA;AACA;AACA;AACA;AACA,iBADA;AAEA,gDAFA;AAGA,2CAHA;AAIA,gDAJA;AAKA,4CALA;AAMA,oCANA;AAOA,cAPA;;AASA,WArBA,MAqBA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,eAJA,MAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBADA;AAEA,mCAFA;AAGA,gDAHA;AAIA,eAJA;;AAMA;AACA;AACA;AACA;AACA,KA1LA;AA2LA;AACA;;;;;AAKA,eAjMA,uBAiMA,IAjMA,EAiMA,GAjMA,EAiMA,KAjMA,EAiMA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SARA,MAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WATA,MASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAlOA;;AAoOA;AACA,gCArOA,wCAqOA,IArOA,EAqOA,SArOA,EAqOA,GArOA,EAqOA,KArOA,EAqOA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SALA,MAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WALA,MAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAnRA;AAoRA;AACA,yBArRA,iCAqRA,IArRA,EAqRA,GArRA,EAqRA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SALA,MAKA;AACA;AACA;AACA;AACA,WAFA,MAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAzSA;AA0SA;AACA;;;;AAIA,aA/SA,qBA+SA,EA/SA,EA+SA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAxTA;AAyTA;AACA,iBA1TA,2BA0TA;AACA;AACA;AACA,KA7TA;AA8TA;AACA;AACA;AACA,aAjUA,qBAiUA,EAjUA,EAiUA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OALA,MAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WALA,MAKA;AACA;AACA,oBADA;AAEA,yBAFA;AAGA,gDAHA;;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KApWA;AAqWA;AACA,2BAtWA,mCAsWA,IAtWA,EAsWA;AACA;AACA;AACA;AACA;AACA;AACA,iBADA;;AAGA;;AAEA;AACA,gCAPA,CAOA;AACA,oCARA,CAQA;AACA;AACA;AACA,SAFA;AAGA;AACA;AACA,SAFA;AAGA;AACA;AACA,aADA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OA5CA,MA4CA;;AAEA;AACA;AACA,SAFA;AAGA;AACA,KA5ZA;;AA8ZA;AACA,kBA/ZA,0BA+ZA,IA/ZA,EA+ZA,GA/ZA,EA+ZA,KA/ZA,EA+ZA,QA/ZA,EA+ZA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SALA,MAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAJA,MAIA;AACA;AACA;AACA;AACA,iBADA;AAEA,gDAFA;AAGA,2CAHA;AAIA,gDAJA;AAKA,4CALA;AAMA,oCANA;AAOA,cAPA;;AASA,WAlBA,MAkBA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAJA,MAIA;AACA;AACA;AACA;AACA,iBADA;AAEA,4CAFA;AAGA,gDAHA;AAIA,gBAJA;;AAMA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAxdA;;AA0dA,aA1dA,qBA0dA,IA1dA,EA0dA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SALA,MAKA;AACA;AACA;AACA;AACA,iBADA;AAEA,gDAFA;AAGA,2CAHA;AAIA,4CAJA;AAKA,gDALA;AAMA,oCANA;;AAQA,WATA,MASA;AACA;AACA,iBADA;AAEA,4CAFA;AAGA,gDAHA;;AAKA;AACA;AACA;AACA;AACA,KAzfA;AA0fA;AACA;;;;;AAKA,mBAhgBA,2BAggBA,GAhgBA,EAggBA,SAhgBA,EAggBA,KAhgBA,EAggBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KA7gBA;AA8gBA,wBA9gBA,gCA8gBA,IA9gBA,EA8gBA,GA9gBA,EA8gBA,KA9gBA,EA8gBA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SALA,MAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAJA,MAIA;AACA;AACA;AACA;AACA,iBADA;AAEA,gDAFA;AAGA,2CAHA;AAIA,gDAJA;AAKA,4CALA;AAMA,oCANA;AAOA,cAPA;;AASA,WAlBA,MAkBA;AACA;AACA;AACA;AACA;AACA;AACA,aAJA,MAIA;AACA;AACA;AACA;AACA,iBADA;AAEA,4CAFA;AAGA,gDAHA;AAIA,gBAJA;;AAMA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,KAnkBA;AAokBA;AACA,gBArkBA,0BAqkBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KA9kBA;AA+kBA;AACA,cAhlBA,wBAglBA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,OAFA;AAGA,KA7lBA;AA8lBA;AACA,6BA/lBA,qCA+lBA,IA/lBA,EA+lBA,GA/lBA,EA+lBA,KA/lBA,EA+lBA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SALA,MAKA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAJA,MAIA;AACA;AACA;AACA;AACA,iBADA;AAEA,gDAFA;AAGA,2CAHA;AAIA,gDAJA;AAKA,4CALA;AAMA,oCANA;AAOA,cAPA;;AASA,WAnBA,MAmBA;AACA;AACA;AACA;AACA,iBADA;AAEA,4CAFA;AAGA,gDAHA;AAIA,gBAJA;;AAMA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAjpBA;AAkpBA;AACA,8BAnpBA,sCAmpBA,IAnpBA,EAmpBA,IAnpBA,EAmpBA,GAnpBA,EAmpBA,KAnpBA,EAmpBA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SALA,MAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAJA,MAIA;AACA;AACA;AACA;AACA,iBADA;AAEA,gDAFA;AAGA,2CAHA;AAIA,gDAJA;AAKA,4CALA;AAMA,oCANA;AAOA,cAPA;;AASA,WAlBA,MAkBA;AACA;AACA;AACA;AACA;AACA;AACA,aAJA,MAIA;AACA;AACA;AACA;AACA,iBADA;AAEA,4CAFA;AAGA,gDAHA;AAIA,gBAJA;;AAMA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,KAxsBA;AAysBA;AACA,oBA1sBA,4BA0sBA,MA1sBA,EA0sBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA,kCAJA,CAIA;AACA,sCALA,CAKA;AACA;AACA;AACA,WAFA;AAGA;AACA;AACA,WAFA;AAGA;AACA;AACA,cADA,GACA,KADA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA,KAvvBA;AAwvBA,yBAxvBA,iCAwvBA,YAxvBA,EAwvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAHA;AAIA,SAJA;AAKA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,WAPA,MAOA;AACA;AACA,WAhBA,EAIA;AAaA;AACA;;AAEA;;AAEA;AACA;AACA,SAFA;AAGA;AACA,KAxxBA,EA/FA,E","file":"tm-vuetify/components/tm-tree/tm-tree.js","sourcesContent":["import { render, staticRenderFns, recyclableRender, components } from \"./tm-tree.vue?vue&type=template&id=b980389a&\"\nvar renderjs\nimport script from \"./tm-tree.vue?vue&type=script&lang=js&\"\nexport * from \"./tm-tree.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!D:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\vue-loader\\\\lib\\\\runtime\\\\componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null,\n  false,\n  components,\n  renderjs\n)\n\ncomponent.options.__file = \"tm-vuetify/components/tm-tree/tm-tree.vue\"\nexport default component.exports","export * from \"-!D:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\vue-loader\\\\lib\\\\loaders\\\\templateLoader.js??vue-loader-options!D:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\webpack-preprocess-loader\\\\index.js??ref--16-0!D:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\webpack-uni-mp-loader\\\\lib\\\\template.js!D:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\webpack-uni-app-loader\\\\page-meta.js!D:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\vue-loader\\\\lib\\\\index.js??vue-loader-options!D:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\webpack-uni-mp-loader\\\\lib\\\\style.js!./tm-tree.vue?vue&type=template&id=b980389a&\"","var components\ntry {\n  components = {\n    tmCheckbox: function() {\n      return import(\n        /* webpackChunkName: \"tm-vuetify/components/tm-checkbox/tm-checkbox\" */ \"@/tm-vuetify/components/tm-checkbox/tm-checkbox.vue\"\n      )\n    },\n    tmIcons: function() {\n      return import(\n        /* webpackChunkName: \"tm-vuetify/components/tm-icons/tm-icons\" */ \"@/tm-vuetify/components/tm-icons/tm-icons.vue\"\n      )\n    },\n    tmTree: function() {\n      return import(\n        /* webpackChunkName: \"tm-vuetify/components/tm-tree/tm-tree\" */ \"@/tm-vuetify/components/tm-tree/tm-tree.vue\"\n      )\n    }\n  }\n} catch (e) {\n  if (\n    e.message.indexOf(\"Cannot find module\") !== -1 &&\n    e.message.indexOf(\".vue\") !== -1\n  ) {\n    console.error(e.message)\n    console.error(\"1. 排查组件名称拼写是否正确\")\n    console.error(\n      \"2. 排查组件是否符合 easycom 规范，文档：https://uniapp.dcloud.net.cn/collocation/pages?id=easycom\"\n    )\n    console.error(\n      \"3. 若组件不符合 easycom 规范，需手动引入，并在 components 中注册该组件\"\n    )\n  } else {\n    throw e\n  }\n}\nvar render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n}\nvar recyclableRender = false\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns, recyclableRender, components }","import mod from \"-!D:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\babel-loader\\\\lib\\\\index.js!D:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\webpack-preprocess-loader\\\\index.js??ref--12-1!D:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\webpack-uni-mp-loader\\\\lib\\\\script.js!D:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\vue-loader\\\\lib\\\\index.js??vue-loader-options!D:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\webpack-uni-mp-loader\\\\lib\\\\style.js!./tm-tree.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!D:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\babel-loader\\\\lib\\\\index.js!D:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\webpack-preprocess-loader\\\\index.js??ref--12-1!D:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\webpack-uni-mp-loader\\\\lib\\\\script.js!D:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\vue-loader\\\\lib\\\\index.js??vue-loader-options!D:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\webpack-uni-mp-loader\\\\lib\\\\style.js!./tm-tree.vue?vue&type=script&lang=js&\"","<template>\r\n\t<view class=\"tm-tree \">\r\n\t\t<view v-for=\"(item, index) in list_c\" :key=\"index\">\r\n\t\t\t<view :class=\"['text-size-s', 'py-16  ml-32']\">\r\n\t\t\t\t<view v-if=\"!item.isDir\" class=\" flex-start\">\r\n\t\t\t\t\t<view v-if=\"!read\" @click.stop=\"changeCheckboxItem(item)\" class=\"pr-12\">\r\n\t\t\t\t\t\t<tm-checkbox :fllowTheme=\"fllowTheme\" :color=\"color_tmeme\" :disabled=\"item['disabled']\" dense\r\n\t\t\t\t\t\t\tv-model=\"item.checked\"></tm-checkbox>\r\n\t\t\t\t\t</view>\r\n\t\t\t\t\t<view class=\"flex-start\">\r\n\t\t\t\t\t\t<view v-if=\"item['icon']\" class=\"pr-10\">\r\n\t\t\t\t\t\t\t<tm-icons :fllowTheme=\"fllowTheme\" :color=\"color_tmeme\" dense :name=\"item['icon']\"\r\n\t\t\t\t\t\t\t\t:size=\"32\"></tm-icons>\r\n\t\t\t\t\t\t</view>\r\n\t\t\t\t\t\t<text :class=\"[`text-${item.checked ? color_tmeme : black_tmeme ? 'grey' : 'black'}`]\"\r\n\t\t\t\t\t\t\tclass=\"text-size-n\">{{ item.title }}</text>\r\n\t\t\t\t\t</view>\r\n\t\t\t\t</view>\r\n\t\t\t\t<view v-if=\"item.isDir\" class=\"\">\r\n\t\t\t\t\t<view @click.stop=\"groupOpenChange(item)\" class=\"flex-between\">\r\n\t\t\t\t\t\t<view class=\"flex-start\">\r\n\t\t\t\t\t\t\t<tm-icons :fllowTheme=\"fllowTheme\" :color=\"color_tmeme\"\r\n\t\t\t\t\t\t\t\t:name=\"item.openDir ? dirIconList[1] : dirIconList[0]\" :size=\"32\"></tm-icons>\r\n\t\t\t\t\t\t\t<view v-if=\"!read\" @click.stop=\"changeCheckboxGroupItem(item)\" class=\"px-12\">\r\n\t\t\t\t\t\t\t\t<tm-checkbox :icon=\"item['dirType']==3?'icon-minus':'icon-check'\"\r\n\t\t\t\t\t\t\t\t\t:fllowTheme=\"fllowTheme\" :color=\"color_tmeme\" :disabled=\"item['disabled']\" dense\r\n\t\t\t\t\t\t\t\t\tv-model=\"item.checked\"></tm-checkbox>\r\n\t\t\t\t\t\t\t</view>\r\n\t\t\t\t\t\t\t<text\r\n\t\t\t\t\t\t\t\t:class=\"[`text-${item.checked ? color_tmeme : black_tmeme ? 'grey' : 'black'}`, black_tmeme ? 'bk' : '']\"\r\n\t\t\t\t\t\t\t\tclass=\"text-size-n\">\r\n\t\t\t\t\t\t\t\t{{ item.title }}{{ item.openDir }}\r\n\t\t\t\t\t\t\t</text>\r\n\t\t\t\t\t\t</view>\r\n\t\t\t\t\t</view>\r\n\t\t\t\t\t<view v-if=\"item.openDir && item['children'].length > 0\" class=\"ml-24 flex-shrink border-l-1 \"\r\n\t\t\t\t\t\t:class=\"[black_tmeme ? 'bk' : '']\" style=\"border-left-style: dotted;\">\r\n\t\t\t\t\t\t<tm-tree :read=\"read\" :fllowTheme=\"fllowTheme\" :color=\"color_tmeme\"\r\n\t\t\t\t\t\t\t:dirOpenIcon=\"dirIconList[1]\" :dirCloseIcon=\"dirIconList[0]\" @changePrarent=\"changePrarent\"\r\n\t\t\t\t\t\t\t:list=\"item['children']\" :prarent=\"item\"></tm-tree>\r\n\t\t\t\t\t</view>\r\n\t\t\t\t</view>\r\n\t\t\t</view>\r\n\t\t</view>\r\n\t</view>\r\n</template>\r\n\r\n<script>\r\n\t/**\r\n\t * 树状结构\r\n\t * @property {Array} list = [] 默认数据列表。\r\n\t * @property {Array} defalut-value = [] 默认选中的项，通过id的集合。\r\n\t * @property {String} dirCloseIcon = [] 默认 'icon-caret-right'，关闭后的图标\r\n\t * @property {String} dirOpenIcon = [] 默认 'icon-sort-down'，打开后的图标\r\n\t * @property {String} color = [] 默认 'primary'，主题色\r\n\t * @property {Boolean|String} read = [] 默认 false，是否只读，作为目录展示\r\n\t */\r\n\timport tmCheckbox from '@/tm-vuetify/components/tm-checkbox/tm-checkbox.vue';\r\n\timport tmIcons from '@/tm-vuetify/components/tm-icons/tm-icons.vue';\r\n\timport tmTree from '@/tm-vuetify/components/tm-tree/tm-tree.vue';\r\n\r\n\texport default {\r\n\t\tname: 'tm-tree',\r\n\r\n\t\tcomponents: {\r\n\t\t\ttmCheckbox,\r\n\t\t\ttmTree,\r\n\t\t\ttmIcons\r\n\t\t},\r\n\t\tprops: {\r\n\t\t\tlist: {\r\n\t\t\t\ttype: Array,\r\n\t\t\t\tdefault: () => {\r\n\t\t\t\t\treturn [];\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tdefalutValue: {\r\n\t\t\t\ttype: Array,\r\n\t\t\t\tdefault: () => []\r\n\t\t\t},\r\n\t\t\tdirCloseIcon: {\r\n\t\t\t\ttype: String,\r\n\t\t\t\tdefault: 'icon-caret-right'\r\n\t\t\t},\r\n\t\t\tdirOpenIcon: {\r\n\t\t\t\ttype: String,\r\n\t\t\t\tdefault: 'icon-sort-down'\r\n\t\t\t},\r\n\t\t\tcolor: {\r\n\t\t\t\ttype: String,\r\n\t\t\t\tdefault: 'primary'\r\n\t\t\t},\r\n\t\t\t//外部不允许使用。\r\n\t\t\tprarent: {\r\n\t\t\t\ttype: Object,\r\n\t\t\t\tdefault: () => null\r\n\t\t\t},\r\n\t\t\t// 跟随主题色的改变而改变。\r\n\t\t\tfllowTheme: {\r\n\t\t\t\ttype: Boolean | String,\r\n\t\t\t\tdefault: true\r\n\t\t\t},\r\n\t\t\t// 是否开启暗黑模式\r\n\t\t\tblack: {\r\n\t\t\t\ttype: String | Boolean,\r\n\t\t\t\tdefault: null\r\n\t\t\t},\r\n\t\t\tread: {\r\n\t\t\t\ttype: Boolean | String,\r\n\t\t\t\tdefault: false\r\n\t\t\t}\r\n\t\t},\r\n\t\twatch: {\r\n\t\t\tlist: {\r\n\t\t\t\tdeep: true,\r\n\t\t\t\thandler() {\r\n\t\t\t\t\tthis.list_c = this.list;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tcomputed: {\r\n\t\t\tblack_tmeme: function() {\r\n\t\t\t\tif (this.black !== null) return this.black;\r\n\t\t\t\treturn this.$tm.vx.state().tmVuetify.black;\r\n\t\t\t},\r\n\t\t\tcolor_tmeme: function() {\r\n\t\t\t\tif (this.$tm.vx.state().tmVuetify.color !== null && this.$tm.vx.state().tmVuetify.color && this\r\n\t\t\t\t\t.fllowTheme) {\r\n\t\t\t\t\treturn this.$tm.vx.state().tmVuetify.color;\r\n\t\t\t\t}\r\n\t\t\t\treturn this.color;\r\n\t\t\t},\r\n\t\t\tdirIconList: function() {\r\n\t\t\t\treturn [this.dirCloseIcon, this.dirOpenIcon];\r\n\t\t\t},\r\n\t\t\tlist_c: {\r\n\t\t\t\tget() {\r\n\t\t\t\t\treturn this.listData;\r\n\t\t\t\t},\r\n\t\t\t\tset(val) {\r\n\t\t\t\t\tthis.chulilist(val);\r\n\t\t\t\t\tlet rulst = this.getCheckedArray();\r\n\t\t\t\t\tthis.$emit('change', rulst);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tdata() {\r\n\t\t\treturn {\r\n\t\t\t\tshowContent: true,\r\n\t\t\t\tlistData: []\r\n\t\t\t};\r\n\t\t},\r\n\t\tmounted() {\r\n\t\t\tthis.list_c = this.list;\r\n\t\t\tthis.setDefaultSelectedKey();\r\n\t\t},\r\n\t\tmethods: {\r\n\t\t\tgroupOpenChange(item) {\r\n\t\t\t\tif (item['disabled'] === true) return;\r\n\t\t\t\tthis.$nextTick(function() {\r\n\t\t\t\t\tlet p = !item.openDir;\r\n\t\t\t\t\t\r\n\t\t\t\t\tthis.list_c = this.setChildListData(this.list_c, item, 'openDir', !item.openDir);\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\t\t// 子项目点击选中切换。\r\n\t\t\tchangeCheckboxItem(item) {\r\n\t\t\t\tif (item['disabled'] === true || this.prarent?.disabled === true) return;\r\n\t\t\t\tthis.$nextTick(function() {\r\n\t\t\t\t\tthis.list_c = this.setChildListData(this.list_c, item, 'checked', item.checked);\r\n\t\t\t\t\tthis.$nextTick(function() {\r\n\t\t\t\t\t\tif (this.prarent) {\r\n\r\n\t\t\t\t\t\t\t//递归修改父节点。\r\n\t\t\t\t\t\t\tlet p = {\r\n\t\t\t\t\t\t\t\t...this.prarent\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\tp.children = [...this.list_c];\r\n\r\n\r\n\t\t\t\t\t\t\tlet prenatKeyArray = this.getChildrenKeyToArray(p, 'checked');\r\n\t\t\t\t\t\t\tlet isAllChecked = true; //是否全部选中。\r\n\t\t\t\t\t\t\tlet isAllChecked_min = true; //是否半选中。\r\n\t\t\t\t\t\t\tlet isAllCheckedAr_all_true = prenatKeyArray.filter((el, eindex) => {\r\n\t\t\t\t\t\t\t\treturn el == true;\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\tlet isAllCheckedAr_all_false = prenatKeyArray.filter((el, eindex) => {\r\n\t\t\t\t\t\t\t\treturn el == false;\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\tisAllChecked = isAllCheckedAr_all_true.length === prenatKeyArray.length ?\r\n\t\t\t\t\t\t\t\ttrue : false;\r\n\t\t\t\t\t\t\tisAllChecked_min = isAllCheckedAr_all_true.length > 0 &&\r\n\t\t\t\t\t\t\t\tisAllCheckedAr_all_false.length > 0 ? true : false;\r\n\r\n\t\t\t\t\t\t\tp['children'] = this.checkAllChildren(p['children']);\r\n\t\t\t\t\t\t\tif (isAllChecked) {\r\n\t\t\t\t\t\t\t\tp['dirType'] = 2;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif (isAllChecked_min) {\r\n\t\t\t\t\t\t\t\tp['dirType'] = 3;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif (isAllCheckedAr_all_true.length == 0) {\r\n\t\t\t\t\t\t\t\tp['dirType'] = 1;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tisAllChecked = isAllChecked_min || isAllChecked ? true : false;\r\n\t\t\t\t\t\t\tp['checked'] = isAllChecked;\r\n\r\n\r\n\t\t\t\t\t\t\t// let prenatKeyArray = this.getChildrenKeyToArray(p, 'checked');\r\n\t\t\t\t\t\t\t// let isAllChecked = true;\r\n\t\t\t\t\t\t\t// for (let i = 0; i < prenatKeyArray.length; i++) {\r\n\t\t\t\t\t\t\t// \tif (prenatKeyArray[i] === false) {\r\n\t\t\t\t\t\t\t// \t\tisAllChecked = false;\r\n\t\t\t\t\t\t\t// \t\tbreak;\r\n\t\t\t\t\t\t\t// \t}\r\n\t\t\t\t\t\t\t// }\r\n\t\t\t\t\t\t\t// p.checked = isAllChecked;\r\n\r\n\t\t\t\t\t\t\tthis.$emit('changePrarent', p);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\t\t//收到子节点修改父节点的请求。\r\n\t\t\tchangePrarent(item) {\r\n\r\n\t\t\t\tthis.$nextTick(function() {\r\n\t\t\t\t\tlet index = this.list_c.findIndex(ix => ix.id === item.id);\r\n\t\t\t\t\tthis.list_c.splice(index, 1, item);\r\n\r\n\t\t\t\t\tif (this.prarent) {\r\n\t\t\t\t\t\tif (item['disabled'] === true) return;\r\n\t\t\t\t\t\tif (this.prarent['disabled'] === true) return;\r\n\t\t\t\t\t\t// 再反递归，修改它的上一级，一直类推到第一级。\r\n\t\t\t\t\t\tlet p = {\r\n\t\t\t\t\t\t\t...this.prarent\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\tp.children = [...this.list_c];\r\n\t\t\t\t\t\tlet prenatKeyArray = this.getChildrenKeyToArray(p, 'checked');\r\n\t\t\t\t\t\tlet isAllChecked = true; //是否全部选中。\r\n\t\t\t\t\t\tlet isAllChecked_min = true; //是否半选中。\r\n\t\t\t\t\t\tlet isAllCheckedAr_all_true = prenatKeyArray.filter((el, eindex) => {\r\n\t\t\t\t\t\t\treturn el == true;\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\tlet isAllCheckedAr_all_false = prenatKeyArray.filter((el, eindex) => {\r\n\t\t\t\t\t\t\treturn el == false;\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\tisAllChecked = isAllCheckedAr_all_true.length === prenatKeyArray.length ? true : false;\r\n\t\t\t\t\t\tisAllChecked_min = isAllCheckedAr_all_true.length > 0 && isAllCheckedAr_all_false.length >\r\n\t\t\t\t\t\t\t0 ? true : false;\r\n\t\t\t\t\t\tp['children'] = this.checkAllChildren(p['children']);\r\n\t\t\t\t\t\tif (isAllChecked) {\r\n\t\t\t\t\t\t\tp['dirType'] = 2;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (isAllChecked_min) {\r\n\t\t\t\t\t\t\tp['dirType'] = 3;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (isAllCheckedAr_all_true.length == 0) {\r\n\t\t\t\t\t\t\tp['dirType'] = 1;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tisAllChecked = isAllChecked_min || isAllChecked ? true : false;\r\n\t\t\t\t\t\tp['checked'] = isAllChecked;\r\n\r\n\t\t\t\t\t\tthis.$emit('changePrarent', p);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// 第一级。\r\n\t\t\t\t\t\tlet rulst = this.getCheckedArray();\r\n\t\t\t\t\t\tthis.$emit('change', rulst);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t},\r\n\r\n\t\t\t//设置某一个key的属性。\r\n\t\t\t/**\r\n\t\t\t * @param {Object} list 目标数组\r\n\t\t\t * @param {Object} item 待修改的对象（根据item.id修改）\r\n\t\t\t * @param {Object} key 待修改的字段名称\r\n\t\t\t * @param {Object} value 待修改的字段变量。\r\n\t\t\t */\r\n\t\t\tsetChildListData(list, item, key, value) {\r\n\t\t\t\tlet parar = [...list];\r\n\r\n\t\t\t\tfunction ch(objAr) {\r\n\t\t\t\t\tlet p = [];\r\n\t\t\t\t\tif (typeof objAr == 'object' && Array.isArray(objAr)) {\r\n\t\t\t\t\t\tfor (let i = 0; i < objAr.length; i++) {\r\n\t\t\t\t\t\t\tp.push(ch(objAr[i]));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn p;\r\n\t\t\t\t\t} else if (typeof objAr === 'object') {\r\n\t\t\t\t\t\tlet children = objAr['children'];\r\n\t\t\t\t\t\tif (typeof children === 'object' && Array.isArray(children) && children.length>0) {\r\n\t\t\t\t\t\t\tlet xg = {};\r\n\t\t\t\t\t\t\tif (item.id === objAr.id) {\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tif(key=='checked'){\r\n\t\t\t\t\t\t\t\t\tif(objAr['disabled']!==true){\r\n\t\t\t\t\t\t\t\t\t\txg[key] = value;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t\t\txg[key] = value;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\t...objAr,\r\n\t\t\t\t\t\t\t\tchecked: objAr['checked'] || false,\r\n\t\t\t\t\t\t\t\tisDir: objAr['isDir'] || true,\r\n\t\t\t\t\t\t\t\topenDir: objAr['openDir'] || false,\r\n\t\t\t\t\t\t\t\tdirType: objAr['dirType'] || 1,\r\n\t\t\t\t\t\t\t\tchildren: ch(children),\r\n\t\t\t\t\t\t\t\t...xg\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tlet xg = {};\r\n\r\n\t\t\t\t\t\t\tif (item.id === objAr.id) {\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tif(objAr!='checked'){\r\n\t\t\t\t\t\t\t\t\tif(item['disabled']!==true){\r\n\t\t\t\t\t\t\t\t\t\txg[key] = value;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t\t\txg[key] = value;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tlet isDir = false;\r\n\t\t\t\t\t\t\tif (typeof objAr['isDir'] === 'boolean') isDir = objAr['isDir'];\r\n\t\t\t\t\t\t\tif (typeof objAr['children'] === 'object' && Array.isArray(objAr['children']) && children.length>0) {\r\n\t\t\t\t\t\t\t\tif (objAr['children'].length > 0) {\r\n\t\t\t\t\t\t\t\t\tisDir = true;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\t...objAr,\r\n\t\t\t\t\t\t\t\tisDir: isDir || false,\r\n\t\t\t\t\t\t\t\tchecked: objAr['checked'] || false,\r\n\t\t\t\t\t\t\t\t...xg\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn ch(parar);\r\n\t\t\t},\r\n\t\t\t//通过key的唯一属性取得子集。\r\n\t\t\t/**\r\n\t\t\t * @param {Object} item 目标数组\r\n\t\t\t * @param {Object} key 筛选的字段名称\r\n\t\t\t * @param {Object} value 筛选的的字段变量。\r\n\t\t\t */\r\n\t\t\tgetChildren(item, key, value) {\r\n\t\t\t\tlet parar = [...item];\r\n\r\n\t\t\t\tfunction ch(objAr) {\r\n\t\t\t\t\tlet p = null;\r\n\t\t\t\t\tif (typeof objAr == 'object' && Array.isArray(objAr) && objAr.length>0) {\r\n\t\t\t\t\t\tfor (let i = 0; i < objAr.length; i++) {\r\n\t\t\t\t\t\t\tp = ch(objAr[i]);\r\n\t\t\t\t\t\t\tif (p) {\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn p;\r\n\t\t\t\t\t} else if (typeof objAr === 'object') {\r\n\t\t\t\t\t\tlet children = objAr['children'];\r\n\t\t\t\t\t\tif (typeof children === 'object' && Array.isArray(children) && children.length>0) {\r\n\t\t\t\t\t\t\tif (objAr[key] == value) {\r\n\t\t\t\t\t\t\t\treturn objAr;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tp = ch(objAr.children);\r\n\t\t\t\t\t\t\tif (p) {\r\n\t\t\t\t\t\t\t\treturn p;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tif (objAr[key] == value) {\r\n\t\t\t\t\t\t\t\treturn objAr;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn ch(parar);\r\n\t\t\t},\r\n\r\n\t\t\t//取得子集下所有相同属性的集合。根据指定key的变量条件取得。\r\n\t\t\tgetChildrenKeyToArrayByvalue(item, quereyKey, key, value) {\r\n\t\t\t\t\r\n\t\t\t\t\r\n\r\n\t\t\t\tfunction ch(objAr) {\r\n\t\t\t\t\tlet p = [];\r\n\t\t\t\t\tif (typeof objAr == 'object' && Array.isArray(objAr)&& objAr.length>0) {\r\n\t\t\t\t\t\tfor (let i = 0; i < objAr.length; i++) {\r\n\t\t\t\t\t\t\tp.push(...ch(objAr[i]));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn p;\r\n\t\t\t\t\t} else if (typeof objAr === 'object') {\r\n\t\t\t\t\t\tlet children = objAr['children'];\r\n\t\t\t\t\t\tif (typeof children === 'object' && Array.isArray(children)&& children.length>0) {\r\n\t\t\t\t\t\t\tif (objAr[key] === value) {\r\n\t\t\t\t\t\t\t\treturn [objAr[quereyKey], ...ch(children)];\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn [];\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tif (objAr[key] === value) {\r\n\t\t\t\t\t\t\t\treturn [objAr[quereyKey]];\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn [];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tlet ru = [];\r\n\t\t\t\t//添加父节点。\r\n\t\t\t\tif (item[key] === value) {\r\n\t\t\t\t\tru.push(item[quereyKey]);\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif(typeof item =='object' && Array.isArray() && item?.children.lenght>0){\r\n\t\t\t\t\tlet parar = [...item];\r\n\t\t\t\t\tru = [...ru, ...ch(parar)];\r\n\t\t\t\t}\r\n\t\t\t\tif(typeof item =='object' && !Array.isArray()&& Array.isArray(item?.children)){\r\n\t\t\t\t\t\r\n\t\t\t\t\tlet parar = [...item?.children];\r\n\t\t\t\t\tru = [...ru, ...ch(parar)];\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif(typeof item?.id == 'underfined'){\r\n\t\t\t\t\treturn []\r\n\t\t\t\t}\r\n\t\t\t\treturn ru;\r\n\t\t\t},\r\n\t\t\t//取得子集下所有相同属性的集合。\r\n\t\t\tgetChildrenKeyToArray(item, key) {\r\n\t\t\t\tlet parar = [...item.children];\r\n\r\n\t\t\t\tfunction ch(objAr) {\r\n\t\t\t\t\tlet p = [];\r\n\t\t\t\t\tif (typeof objAr == 'object' && Array.isArray(objAr)&& objAr.length>0) {\r\n\t\t\t\t\t\tfor (let i = 0; i < objAr.length; i++) {\r\n\t\t\t\t\t\t\tp.push(...ch(objAr[i]));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn p;\r\n\t\t\t\t\t} else if (typeof objAr === 'object') {\r\n\t\t\t\t\t\tlet children = objAr['children'];\r\n\t\t\t\t\t\tif (typeof children === 'object' && Array.isArray(children)&& children.length>0) {\r\n\t\t\t\t\t\t\treturn [objAr[key], ...ch(children)];\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\treturn [objAr[key]];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn ch(parar);\r\n\t\t\t},\r\n\t\t\t//打开某一项目录。通过id进行控制打开。\r\n\t\t\t/**\r\n\t\t\t * @param {Object} id 目录id,如果不是目录，不会执行。\r\n\t\t\t * @param {Object} dirType 打开类型：true,打开，close关闭。\r\n\t\t\t */\r\n\t\t\t__openDir(id, dirType = true) {\r\n\t\t\t\t//子节点不允许操作此函数。\r\n\t\t\t\tif (this.prarent == null) {\r\n\t\t\t\t\tlet children = this.getChildren(this.list_c, 'id', id);\r\n\t\t\t\t\tif (children['isDir']) {\r\n\t\t\t\t\t\tchildren['openDir'] = dirType;\r\n\t\t\t\t\t\tthis.setDirListData(children, 'openDir', dirType);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t//获取当前列表数据。子级不能调用。\r\n\t\t\t__getListdata() {\r\n\t\t\t\tif (this.prarent) return [];\r\n\t\t\t\treturn this.list_c;\r\n\t\t\t},\r\n\t\t\t//添加数据。子级不可调用。\r\n\t\t\t//注意：如果提供的id是dir则在其子集中添加数据。因此如果想在本级添加数据需要提供父级id.\r\n\t\t\t//如果提供的id不是目录id,那么会自动创建它的子集。\r\n\t\t\t__addData(id, data = null) {\r\n\t\t\t\tif (this.prarent) return [];\r\n\t\t\t\tif (!data || typeof data != 'object') return;\r\n\t\t\t\t//不提供id默认在根目录添加数据追加。\r\n\t\t\t\tif (typeof id === 'undefined' || id == null || id == '') {\r\n\t\t\t\t\tlet cp = uni.$tm.deepClone(this.list_c);\r\n\t\t\t\t\tcp.push(...data);\r\n\r\n\t\t\t\t\tthis.list_c = cp;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tlet ps = uni.$tm.deepClone(this.list_c);\r\n\t\t\t\t\tfor (let i = 0; i < ps.length; i++) {\r\n\t\t\t\t\t\tlet children = this.getChildren(ps, 'id', id);\r\n\t\t\t\t\t\t//如果是目录，向其子集添加数据。\r\n\t\t\t\t\t\tif (children['isDir']) {\r\n\t\t\t\t\t\t\tchildren['children'].push(...data);\r\n\t\t\t\t\t\t\tthis.list_c = this.setChildListData(ps, children, 'children', children['children']);\r\n\r\n\t\t\t\t\t\t\t//不是目录。它没有子集。创建子集。\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tchildren = {\r\n\t\t\t\t\t\t\t\t...children,\r\n\t\t\t\t\t\t\t\tisDir: true,\r\n\t\t\t\t\t\t\t\tchildren: [...data]\r\n\t\t\t\t\t\t\t};\r\n\r\n\t\t\t\t\t\t\tps = this.setChildListData(ps, children, 'isDir', true);\r\n\t\t\t\t\t\t\tps = this.setChildListData(ps, children, 'children', children['children']);\r\n\t\t\t\t\t\t\tthis.list_c = ps;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (children) {\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t// 项目父节点击选中切换。\r\n\t\t\tchangeCheckboxGroupItem(item) {\r\n\t\t\t\tif (item['disabled'] === true) return;\r\n\t\t\t\tlet t = this;\r\n\t\t\t\tt.setDirListData(item, 'checked', item.checked);\r\n\t\t\t\tif (t.prarent) {\r\n\t\t\t\t\tlet p = {\r\n\t\t\t\t\t\t...t.prarent\r\n\t\t\t\t\t};\r\n\t\t\t\t\tp.children = [...t.list_c];\r\n\r\n\t\t\t\t\tlet prenatKeyArray = this.getChildrenKeyToArray(p, 'checked');\r\n\t\t\t\t\tlet isAllChecked = true; //是否全部选中。\r\n\t\t\t\t\tlet isAllChecked_min = true; //是否半选中。\r\n\t\t\t\t\tlet isAllCheckedAr_all_true = prenatKeyArray.filter((el, eindex) => {\r\n\t\t\t\t\t\treturn el == true;\r\n\t\t\t\t\t})\r\n\t\t\t\t\tlet isAllCheckedAr_all_false = prenatKeyArray.filter((el, eindex) => {\r\n\t\t\t\t\t\treturn el == false;\r\n\t\t\t\t\t})\r\n\t\t\t\t\tisAllChecked = isAllCheckedAr_all_true.length === prenatKeyArray.length ? true : false;\r\n\t\t\t\t\tisAllChecked_min = isAllCheckedAr_all_true.length > 0 && isAllCheckedAr_all_false.length > 0 ? true :\r\n\t\t\t\t\t\tfalse;\r\n\r\n\t\t\t\t\tp['children'] = this.checkAllChildren(p['children']);\r\n\t\t\t\t\tif (isAllChecked) {\r\n\t\t\t\t\t\tp['dirType'] = 2;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (isAllChecked_min) {\r\n\t\t\t\t\t\tp['dirType'] = 3;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (isAllCheckedAr_all_true.length == 0) {\r\n\t\t\t\t\t\tp['dirType'] = 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tisAllChecked = isAllChecked_min || isAllChecked ? true : false;\r\n\t\t\t\t\tp['checked'] = isAllChecked;\r\n\r\n\r\n\t\t\t\t\t// let prenatKeyArray = t.getChildrenKeyToArray(p, 'checked');\r\n\t\t\t\t\t// let isAllChecked = true;\r\n\t\t\t\t\t// for (let i = 0; i < prenatKeyArray.length; i++) {\r\n\t\t\t\t\t// \tif (prenatKeyArray[i] === false) {\r\n\t\t\t\t\t// \t\tisAllChecked = false;\r\n\t\t\t\t\t// \t\tbreak;\r\n\t\t\t\t\t// \t}\r\n\t\t\t\t\t// }\r\n\t\t\t\t\t// p.checked = isAllChecked;\r\n\r\n\t\t\t\t\tt.$emit('changePrarent', p);\r\n\t\t\t\t}else{\r\n\t\t\t\t\t\r\n\t\t\t\t\tthis.$nextTick(function(){\r\n\t\t\t\t\t\tthis.list_c = this.checkAllChildren(this.list_c)\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\t//设置dir下，所有子集相同的属性。\r\n\t\t\tsetDirListData(item, key, value, callback) {\r\n\t\t\t\tlet parar = uni.$tm.deepClone(item);\r\n\r\n\t\t\t\tfunction ch(objAr) {\r\n\t\t\t\t\tlet p = [];\r\n\t\t\t\t\tif (typeof objAr == 'object' && Array.isArray(objAr)&& objAr.length>0) {\r\n\t\t\t\t\t\tfor (let i = 0; i < objAr.length; i++) {\r\n\t\t\t\t\t\t\tp.push(ch(objAr[i]));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn p;\r\n\t\t\t\t\t} else if (typeof objAr === 'object') {\r\n\t\t\t\t\t\tlet children = objAr['children'];\r\n\t\t\t\t\t\tif (typeof children === 'object' && Array.isArray(children)&& children.length>0) {\r\n\t\t\t\t\t\t\tlet xg = {};\r\n\t\t\t\t\t\t\tif(key=='checked'){\r\n\t\t\t\t\t\t\t\tif(objAr['disabled']!==true){\r\n\t\t\t\t\t\t\t\t\txg[key] = value;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t\txg[key] = value;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\t...objAr,\r\n\t\t\t\t\t\t\t\tchecked: objAr['checked'] || false,\r\n\t\t\t\t\t\t\t\tisDir: objAr['isDir'] || true,\r\n\t\t\t\t\t\t\t\topenDir: objAr['openDir'] || false,\r\n\t\t\t\t\t\t\t\tdirType: objAr['dirType'] || 1,\r\n\t\t\t\t\t\t\t\tchildren: ch(children),\r\n\t\t\t\t\t\t\t\t...xg\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tlet xg = {};\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tif(key=='checked'){\r\n\t\t\t\t\t\t\t\tif(objAr['disabled']!==true){\r\n\t\t\t\t\t\t\t\t\txg[key] = value;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t\txg[key] = value;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\t...objAr,\r\n\t\t\t\t\t\t\t\tisDir: objAr['isDir'] || false,\r\n\t\t\t\t\t\t\t\tchecked: objAr['checked'] || false,\r\n\t\t\t\t\t\t\t\t...xg\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet ts = ch(parar.children);\r\n\r\n\t\t\t\tlet new_list = this.setChildListData(this.list_c, item, 'children', ts);\r\n\t\t\t\tthis.list_c = [...new_list];\r\n\t\t\t\tif (callback) {\r\n\t\t\t\t\tcallback();\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\tchulilist(list) {\r\n\t\t\t\tlet parar = [...list];\r\n\t\t\t\t//dirType=1，未选中，2选中，3有选中，有未选中的\r\n\t\t\t\tfunction ch(objAr) {\r\n\t\t\t\t\tlet p = [];\r\n\t\t\t\t\tif (typeof objAr == 'object' && Array.isArray(objAr)&& objAr.length>0) {\r\n\t\t\t\t\t\tfor (let i = 0; i < objAr.length; i++) {\r\n\t\t\t\t\t\t\tp.push(ch(objAr[i]));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn p;\r\n\t\t\t\t\t} else if (typeof objAr === 'object') {\r\n\t\t\t\t\t\tlet children = objAr['children'];\r\n\t\t\t\t\t\tif (typeof children === 'object' && Array.isArray(children)&& children.length>0) {\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\t...objAr,\r\n\t\t\t\t\t\t\t\tchecked: objAr['checked'] || false,\r\n\t\t\t\t\t\t\t\tisDir: objAr['isDir'] || true,\r\n\t\t\t\t\t\t\t\tdirType: objAr['dirType'] || 1,\r\n\t\t\t\t\t\t\t\topenDir: objAr['openDir'] || false,\r\n\t\t\t\t\t\t\t\tchildren: ch(children)\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\t...objAr,\r\n\t\t\t\t\t\t\t\tisDir: objAr['isDir'] || false,\r\n\t\t\t\t\t\t\t\tchecked: objAr['checked'] || false\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis.listData = ch(parar);\r\n\t\t\t},\r\n\t\t\t// 获取所有选中的条目指定条件的属性。id\r\n\t\t\t/**\r\n\t\t\t * @param {Object} key 需要取得的字段名称。 默认是id\r\n\t\t\t * @param {Object} quereyKey 条件查询的字段。默认是checked即选中的条目字段\r\n\t\t\t * @param {Object} value 条件查询的字段的变量。默认是true即选中的条目值\r\n\t\t\t */\r\n\t\t\tgetCheckedArray(key, quereyKey, value) {\r\n\t\t\t\tkey = typeof key === 'undefined' ? 'id' : key;\r\n\t\t\t\tquereyKey = typeof quereyKey === 'undefined' ? 'checked' : quereyKey;\r\n\t\t\t\tvalue = typeof value === 'undefined' ? true : value;\r\n\t\t\t\tif (this.prarent) return;\r\n\t\t\t\tlet ps = uni.$tm.deepClone(this.list_c);\r\n\t\t\t\tlet rulst = [];\r\n\t\t\t\tfor (let i = 0; i < ps.length; i++) {\r\n\t\t\t\t\tlet idArray = this.getChildrenKeyToArrayByvalue(ps[i], key, quereyKey, value);\r\n\t\t\t\t\trulst.push(...idArray);\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn rulst;\r\n\t\t\t},\r\n\t\t\tsetDirListDataBySync(item, key, value) {\r\n\t\t\t\tlet parar = uni.$tm.deepClone(item);\r\n\r\n\t\t\t\tfunction ch(objAr) {\r\n\t\t\t\t\tlet p = [];\r\n\t\t\t\t\tif (typeof objAr == 'object' && Array.isArray(objAr)&& objAr.length>0) {\r\n\t\t\t\t\t\tfor (let i = 0; i < objAr.length; i++) {\r\n\t\t\t\t\t\t\tp.push(ch(objAr[i]));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn p;\r\n\t\t\t\t\t} else if (typeof objAr === 'object') {\r\n\t\t\t\t\t\tlet children = objAr['children'];\r\n\t\t\t\t\t\tif (typeof children === 'object' && Array.isArray(children)&& children.length>0) {\r\n\t\t\t\t\t\t\tlet xg = {};\r\n\t\t\t\t\t\t\tif(key=='checked'){\r\n\t\t\t\t\t\t\t\tif(objAr['disabled']!==true){\r\n\t\t\t\t\t\t\t\t\txg[key] = value;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t\txg[key] = value;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\t...objAr,\r\n\t\t\t\t\t\t\t\tchecked: objAr['checked'] || false,\r\n\t\t\t\t\t\t\t\tisDir: objAr['isDir'] || true,\r\n\t\t\t\t\t\t\t\topenDir: objAr['openDir'] || false,\r\n\t\t\t\t\t\t\t\tdirType: objAr['dirType'] || 1,\r\n\t\t\t\t\t\t\t\tchildren: ch(children),\r\n\t\t\t\t\t\t\t\t...xg\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tlet xg = {};\r\n\t\t\t\t\t\t\tif(key=='checked'){\r\n\t\t\t\t\t\t\t\tif(objAr['disabled']!==true){\r\n\t\t\t\t\t\t\t\t\txg[key] = value;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t\txg[key] = value;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\t...objAr,\r\n\t\t\t\t\t\t\t\tisDir: objAr['isDir'] || false,\r\n\t\t\t\t\t\t\t\tchecked: objAr['checked'] || false,\r\n\t\t\t\t\t\t\t\t...xg\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet ts = ch(parar.children);\r\n\r\n\t\t\t\tlet new_list = this.setChildListData(this.list_c, item, 'children', ts);\r\n\t\t\t\tthis.list_c = [...new_list];\r\n\t\t\t},\r\n\t\t\t//清空所有选择。\r\n\t\t\tclearChecked() {\r\n\t\t\t\tlet ps = uni.$tm.deepClone(this.list_c);\r\n\t\t\t\tfor (let i = 0; i < ps.length; i++) {\r\n\t\t\t\t\tps[i].checked = false;\r\n\t\t\t\t\tps[i].dirType = 1;\r\n\t\t\t\t\tlet new_list = this.setChildListData(this.list_c, ps[i], 'checked', ps[i].checked);\r\n\t\t\t\t\tthis.list_c = [...new_list];\r\n\t\t\t\t\tthis.setDirListDataBySync(ps[i], 'checked', false);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t//选中所有选择。\r\n\t\t\tseletedAll() {\r\n\t\t\t\tlet ps = uni.$tm.deepClone(this.list_c);\r\n\t\t\t\tfor (let i = 0; i < ps.length; i++) {\r\n\t\t\t\t\tps[i].checked = true;\r\n\t\t\t\t\tlet new_list = this.setChildListData(this.list_c, ps[i], 'checked', ps[i].checked);\r\n\r\n\t\t\t\t\tthis.list_c = [...new_list];\r\n\t\t\t\t\tthis.setDirListDataBySync(ps[i], 'checked', true);\r\n\r\n\t\t\t\t}\r\n\t\t\t\tthis.$nextTick(function() {\r\n\t\t\t\t\tthis.list_c = this.setDirListDataBySyncToDir(this.list_c, 'dirType', 2)\r\n\t\t\t\t})\r\n\t\t\t},\r\n\t\t\t//给定一个数组设置它下面所有dir目录（只设置目录，不含其子级）相同的属性。\r\n\t\t\tsetDirListDataBySyncToDir(list, key, value) {\r\n\t\t\t\tlet new_list = uni.$tm.deepClone(list);\r\n\r\n\t\t\t\tfunction ch(objAr) {\r\n\t\t\t\t\tlet p = [];\r\n\t\t\t\t\tif (typeof objAr == 'object' && Array.isArray(objAr)&& objAr.length>0) {\r\n\t\t\t\t\t\tfor (let i = 0; i < objAr.length; i++) {\r\n\t\t\t\t\t\t\tp.push(ch(objAr[i]));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn p;\r\n\t\t\t\t\t} else if (typeof objAr === 'object') {\r\n\t\t\t\t\t\tlet children = objAr['children'];\r\n\t\t\t\t\t\tif (typeof children === 'object' && Array.isArray(children)&& children.length>0) {\r\n\t\t\t\t\t\t\tlet xg = {};\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tif(objAr!='checked'){\r\n\t\t\t\t\t\t\t\tif(objAr['disabled']!==true){\r\n\t\t\t\t\t\t\t\t\txg[key] = value;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t\txg[key] = value;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\t...objAr,\r\n\t\t\t\t\t\t\t\tchecked: objAr['checked'] || false,\r\n\t\t\t\t\t\t\t\tisDir: objAr['isDir'] || true,\r\n\t\t\t\t\t\t\t\topenDir: objAr['openDir'] || false,\r\n\t\t\t\t\t\t\t\tdirType: objAr['dirType'] || 1,\r\n\t\t\t\t\t\t\t\tchildren: ch(children),\r\n\t\t\t\t\t\t\t\t...xg\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tlet xg = {};\r\n\t\t\t\t\t\t\t// xg[key] = value;\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\t...objAr,\r\n\t\t\t\t\t\t\t\tisDir: objAr['isDir'] || false,\r\n\t\t\t\t\t\t\t\tchecked: objAr['checked'] || false,\r\n\t\t\t\t\t\t\t\t...xg\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor (let i = 0; i < new_list.length; i++) {\r\n\t\t\t\t\tlet parar = new_list[i];\r\n\t\t\t\t\tparar[key] = value\r\n\t\t\t\t\tparar['children'] = ch(parar.children);\r\n\t\t\t\t}\r\n\t\t\t\treturn new_list;\r\n\t\t\t},\r\n\t\t\t//给定一个数组设置它下面所有项目相同的属性。\r\n\t\t\tsetDirListDataBySyncToItem(list, item, key, value) {\r\n\t\t\t\tlet parar = uni.$tm.deepClone(item);\r\n\r\n\t\t\t\tfunction ch(objAr) {\r\n\t\t\t\t\tlet p = [];\r\n\t\t\t\t\tif (typeof objAr == 'object' && Array.isArray(objAr)&& objAr.length>0) {\r\n\t\t\t\t\t\tfor (let i = 0; i < objAr.length; i++) {\r\n\t\t\t\t\t\t\tp.push(ch(objAr[i]));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn p;\r\n\t\t\t\t\t} else if (typeof objAr === 'object') {\r\n\t\t\t\t\t\tlet children = objAr['children'];\r\n\t\t\t\t\t\tif (typeof children === 'object' && Array.isArray(children)&& children.length>0) {\r\n\t\t\t\t\t\t\tlet xg = {};\r\n\t\t\t\t\t\t\tif(objAr!='checked'){\r\n\t\t\t\t\t\t\t\tif(objAr['disabled']!==true){\r\n\t\t\t\t\t\t\t\t\txg[key] = value;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t\txg[key] = value;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\t...objAr,\r\n\t\t\t\t\t\t\t\tchecked: objAr['checked'] || false,\r\n\t\t\t\t\t\t\t\tisDir: objAr['isDir'] || true,\r\n\t\t\t\t\t\t\t\topenDir: objAr['openDir'] || false,\r\n\t\t\t\t\t\t\t\tdirType: objAr['dirType'] || 1,\r\n\t\t\t\t\t\t\t\tchildren: ch(children),\r\n\t\t\t\t\t\t\t\t...xg\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tlet xg = {};\r\n\t\t\t\t\t\t\tif(objAr!='checked'){\r\n\t\t\t\t\t\t\t\tif(objAr['disabled']!==true){\r\n\t\t\t\t\t\t\t\t\txg[key] = value;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t\txg[key] = value;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\t...objAr,\r\n\t\t\t\t\t\t\t\tisDir: objAr['isDir'] || false,\r\n\t\t\t\t\t\t\t\tchecked: objAr['checked'] || false,\r\n\t\t\t\t\t\t\t\t...xg\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet ts = ch(parar.children);\r\n\r\n\t\t\t\tlet new_list = this.setChildListData(list, item, 'children', ts);\r\n\t\t\t\treturn new_list;\r\n\t\t\t},\r\n\t\t\t//检查选择情况。\r\n\t\t\tcheckAllChildren(o_item) {\r\n\t\t\t\tlet t = this;\r\n\t\t\t\t// 检查各个子集的选择情况。\r\n\t\t\t\t// this.changePrarent(children)\r\n\t\t\t\t// 再反递归，修改它的上一级，一直类推到第一级。\r\n\t\t\t\tlet otem = uni.$tm.deepClone(o_item);\r\n\t\t\t\tlet ls = [];\r\n\t\t\t\tfor (let j = 0; j < otem.length; j++) {\r\n\t\t\t\t\tlet pr = otem[j];\r\n\r\n\t\t\t\t\tif (pr['isDir']) {\r\n\r\n\t\t\t\t\t\tlet prenatKeyArray = t.getChildrenKeyToArray(pr, 'checked');\r\n\r\n\t\t\t\t\t\tlet isAllChecked = true; //是否全部选中。\r\n\t\t\t\t\t\tlet isAllChecked_min = true; //是否半选中。\r\n\t\t\t\t\t\tlet isAllCheckedAr_all_true = prenatKeyArray.filter((el, eindex) => {\r\n\t\t\t\t\t\t\treturn el == true;\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\tlet isAllCheckedAr_all_false = prenatKeyArray.filter((el, eindex) => {\r\n\t\t\t\t\t\t\treturn el == false;\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\tisAllChecked = isAllCheckedAr_all_true.length === prenatKeyArray.length ? true : false;\r\n\t\t\t\t\t\tisAllChecked_min = isAllCheckedAr_all_true.length > 0 && isAllCheckedAr_all_false.length > 0 ?\r\n\t\t\t\t\t\t\ttrue : false;\r\n\r\n\t\t\t\t\t\tpr['children'] = t.checkAllChildren(pr['children']);\r\n\t\t\t\t\t\tif (isAllChecked) {\r\n\t\t\t\t\t\t\tpr['dirType'] = 2;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (isAllChecked_min) {\r\n\t\t\t\t\t\t\tpr['dirType'] = 3;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (isAllCheckedAr_all_true.length == 0) {\r\n\t\t\t\t\t\t\tpr['dirType'] = 1;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tisAllChecked = isAllChecked_min || isAllChecked ? true : false;\r\n\t\t\t\t\t\tpr['checked'] = isAllChecked;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tls.push(pr)\r\n\t\t\t\t}\r\n\t\t\t\treturn ls;\r\n\r\n\t\t\t},\r\n\t\t\tsetDefaultSelectedKey(defaultValue) {\r\n\t\t\t\tlet t = this;\r\n\t\t\t\tif (!defaultValue) {\r\n\t\t\t\t\tdefaultValue = this.defalutValue;\r\n\t\t\t\t}\r\n\t\t\t\tlet rulst = defaultValue;\r\n\t\t\t\tif (this.prarent == null) {\r\n\t\t\t\t\t//清空所有选择。\r\n\t\t\t\t\t// this.clearChecked();\r\n\t\t\t\t\tlet ps = uni.$tm.deepClone(this.list_c);\r\n\t\t\t\t\tfor (let i = 0; i < rulst.length; i++) {\r\n\t\t\t\t\t\tlet children = this.getChildren(ps, 'id', rulst[i]);\r\n\t\t\t\t\t\tchildren['checked'] = true;\r\n\t\t\t\t\t\tif (children['isDir']) {\r\n\t\t\t\t\t\t\tlet index = ps.findIndex(ix => ix.id === children.id);\r\n\t\t\t\t\t\t\t// this.list_c.splice(index, 1, children);\r\n\r\n\t\t\t\t\t\t\t// this.changeCheckboxGroupItem(children)\r\n\t\t\t\t\t\t\tps = this.setDirListDataBySyncToItem(ps, children, 'checked', children.checked);\r\n\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tps = this.setChildListData(ps, children, 'checked', children.checked);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlet pc = [];\r\n\r\n\t\t\t\t\tps = this.checkAllChildren(ps);\r\n\r\n\t\t\t\t\tthis.$nextTick(function() {\r\n\t\t\t\t\t\tthis.list_c = ps;\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n</script>\r\n\r\n<style lang=\"scss\"></style>\n"],"sourceRoot":""}